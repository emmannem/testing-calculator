# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI Release

on:
  push:
    branches: [ release ]
  pull_request:
    branches: [ release ]

jobs:
  build_release:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run test-headless    
    - run: npm run build --if-present
    - name: make .env
      uses: SpicyPizza/create-envfile@v1.3
      with:
          file_name: .env
          fail_on_empty: false

    - name: build mycv, output in dist
      run: |
          npm run build

    - name: show dir, .env file
      run: |
          ls -la dist/testing-calculator

    - name: download, run httpd image, container name serving_base
      run: |
          docker run -d --name serving_base httpd

    - name: cp testing-calculator dist to container
      run: |
          docker cp dist/testing-calculator/.  serving_base:/usr/local/apache2/htdocs

    - name: Build the custom Docker image
      run: docker commit --change "ENV MODEL_NAME ${{secrets.MODEL_NAME}}" serving_base ${{secrets.DOCKER_USER}}/${{secrets.MODEL_NAME}}:${{github.sha}}

    - name: show docker images
      run: docker images

    - name: docker login
      env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

    - name: Docker Push
      run: docker push ${{secrets.DOCKER_USER}}/${{secrets.MODEL_NAME}}:${{github.sha}}

    - name: update docker user in k8
      run: sed -i 's/{docker_user}/${{secrets.DOCKER_USER}}/g' manifest/k8s.yaml

    - name: update model name in k8
      run: sed -i 's/{model_name}/${{secrets.MODEL_NAME}}/g' manifest/k8s.yaml

    - name: update model nodo in k8
      run: sed -i 's/{nodo}/${{secrets.NODO}}/g' manifest/k8s.yaml

    - name: update _ by -
      run: sed -i 's/_/-/g' manifest/k8s.yaml

    - name: update sha in k8
      run: sed -i 's/{github.sha}/${{github.sha}}/g' manifest/k8s.yaml

    - name: ls -la
      run: cat manifest/k8s.yaml
    - uses: okteto/context@2.7.0
      with:
          token: ${{secrets.OKTETO_TOKEN }}

    - name: Deploy and Wait
      uses: okteto/actions/deploy@v1
      env:
          KUBECONFIG: ${{ steps.namespace.outputs.kubeconfig }}
      with:
          namespace: ${{secrets.OKTETO_NAMESPACE }}
          manifest: manifest/k8s.yaml
          tag: ${{ secrets.DOCKER_USERNAME }}/${{secrets.MODEL_NAME}}:${{github.sha}}
